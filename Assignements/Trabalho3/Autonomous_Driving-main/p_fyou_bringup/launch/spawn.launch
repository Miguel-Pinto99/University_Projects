<launch>
    <!--Bloco 1: argumentos do launch file.-->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="player_name" default="p_fyou"/>
    <arg name="player_color" default="Green"/>

    <arg name="x_pos" default="-0.1"/>
    <arg name="y_pos" default="-1.79"/>
    <arg name="z_pos" default="0.0"/>


     <group ns="$(arg player_name)">
         <!--        Puclica as transformacoes-->
        <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher"/>
        <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher"/>
         <!-- The tf_prefix config make the link names unique in each .urdf (almost as if they respected namespaces. -->
         <param name="tf_prefix" value="$(arg player_name)"/>

    <!--Bloco 3: Carregamento do xacro do robot para o parâmetro robot_description.-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find p_fyou_description)/urdf/p_fyou.urdf.xacro player_color:=$(arg player_color)" />


    <!--Bloco 4: Spawning (criação instantânea) do robô definido pela descrição anteriormente carregada para o robot_description, para uma posição específica da cena. -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg player_name) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

    <!--Load the controller's parameters from a yaml file.-->
        <rosparam file="$(find p_fyou_description)/config/controller.yaml" command="load"/>
    </group>
     <!--Load controller (from ROS)-->
         <node name="differential_controller" pkg="controller_manager" ns="$(arg player_name)" type="spawner" respawn="false" output="screen" args="differential_drive_controller"/>



</launch>

